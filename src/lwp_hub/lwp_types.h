/**
 * @file lwp_types.h
 * @author David Leval
 * @brief Lego Wireless Protocol types
 * @version 1.0
 * @date 2024-03-07
 * 
 * @copyright Copyright (c) 2024
 * 
 */

#ifndef LWP_TYPES_H
#define LWP_TYPES_H

#include <stdint.h>

typedef enum
{
  HUB_PROPERTIES = 0x01,
  HUB_ACTIONS = 0x02,
  HUB_ALERTS = 0x03,
  HUB_ATTACHED_IO = 0x04,
  GENERIC_ERROR_MESSAGES = 0x05,
  HW_NETWORK_COMMANDS = 0x08,
  FW_UPDATE_GO_INTO_BOOT_MODE = 0x10,
  FW_UPDATE_LOCK_MEMORY = 0x11,
  FW_UPDATE_LOCK_STATUS_REQUEST = 0x12,
  FW_LOCK_STATUS = 0x13,
  PORT_INFORMATION_REQUEST = 0x21,
  PORT_MODE_INFORMATION_REQUEST = 0x22,
  PORT_INPUT_FORMAT_SETUP_SINGLE = 0x41,
  PORT_INPUT_FORMAT_SETUP_COMBINEDMODE = 0x42,
  PORT_INFORMATION = 0x43,
  PORT_MODE_INFORMATION = 0x44,
  PORT_VALUE_SINGLE = 0x45,
  PORT_VALUE_COMBINEDMODE = 0x46,
  PORT_INPUT_FORMAT_SINGLE = 0x47,
  PORT_INPUT_FORMAT_COMBINEDMODE = 0x48,
  VIRTUAL_PORT_SETUP = 0x61,
  PORT_OUTPUT_COMMAND = 0x81,
  PORT_OUTPUT_COMMAND_FEEDBACK = 0x82,
} e_msg_type_t;

typedef enum 
{
  ADVERTISING_NAME = 0x01,
  BUTTON = 0x02,
  FW_VERSION = 0x03,
  HW_VERSION = 0x04,
  RSSI = 0x05,
  BATTERY_VOLTAGE = 0x06,
  BATTERY_TYPE = 0x07,
  MANUFACTURER_NAME = 0x08,
  RADIO_FIRMWARE_VERSION = 0x09,
  LEGO_WIRELESS_PROTOCOL_VERSION = 0x0A,
  SYSTEM_TYPE_ID = 0x0B,
  HW_NETWORK_ID = 0x0C,
  PRIMARY_MAC_ADDRESS = 0x0D,
  SECONDARY_MAC_ADDRESS = 0x0E,
  HARDWARE_NETWORK_FAMILY = 0x0F,
} e_property_reference_t;

typedef enum
{
  SET_DOWNSTREAM = 0x01,
  ENABLE_UPDATES_DOWNSTREAM = 0x02,
  DISABLE_UPDATES_DOWNSTREAM = 0x03,
  RESET_DOWNSTREAM = 0x04,
  REQUEST_UPDATE_DOWNSTREAM = 0x05,
  UPDATE_UPSTREAM = 0x06,
} e_property_operation_t;

typedef enum
{
  A = 0x00,
  B = 0x01,
  AB = 0x10,
  C = 0x02,
  D = 0x03,
  LED = 0x32,
  TILT = 0x3A,
  CURRENT = 0x3B,
  VOLTAGE = 0x3C
} e_hub_port_t;

typedef enum
{
    INFO_TYPE_NAME = 0x00,
    INFO_TYPE_RAW = 0x01,
    INFO_TYPE_PCT = 0x02,
    INFO_TYPE_SI = 0x03,
    INFO_TYPE_SYMBOL = 0x04,
    INFO_TYPE_MAPPING = 0x05,
    INFO_TYPE_RESERVED = 0x06,
    INFO_TYPE_MOTOR_BIAS = 0x07,
    INFO_TYPE_CAPABILITY_BIT = 0x08,
    INFO_TYPE_VALUE_FORMAT = 0x80,
} e_port_mode_info_type_t;

typedef enum
{
  UNKNOWNDEVICE = 0x0000,
  SIMPLE_MEDIUM_LINEAR_MOTOR = 0x0001,
  TRAIN_MOTOR = 0x0002,
  LIGHT = 0x0008,
  VOLTAGE_SENSOR = 0x0014,
  CURRENT_SENSOR = 0x0015,
  PIEZO_BUZZER = 0x0016,
  RGB_LED = 0x0017,
  TILT_SENSOR = 0x0022,
  MOTION_SENSOR = 0x0023,
  COLOR_DISTANCE_SENSOR = 0x0025,
  MEDIUM_LINEAR_MOTOR = 0x0026,
  MOVE_HUB_MEDIUM_LINEAR_MOTOR = 0x0027,
  MOVE_HUB_TILT_SENSOR = 0x0028,
  DUPLO_TRAIN_BASE_MOTOR = 0x0029,
  DUPLO_TRAIN_BASE_SPEAKER = 0x002A,
  DUPLO_TRAIN_BASE_COLOR_SENSOR = 43,
  DUPLO_TRAIN_BASE_SPEEDOMETER = 44,
  TECHNIC_LARGE_LINEAR_MOTOR = 46,   // Technic Control+
  TECHNIC_XLARGE_LINEAR_MOTOR = 47,  // Technic Control+
  TECHNIC_MEDIUM_ANGULAR_MOTOR = 48, // Spike Prime
  TECHNIC_LARGE_ANGULAR_MOTOR = 49,  // Spike Prime
  TECHNIC_MEDIUM_HUB_GEST_SENSOR = 54,
  REMOTE_CONTROL_BUTTON = 55,
  REMOTE_CONTROL_RSSI = 56,
  TECHNIC_MEDIUM_HUB_ACCELEROMETER = 57,
  TECHNIC_MEDIUM_HUB_GYRO_SENSOR = 58,
  TECHNIC_MEDIUM_HUB_TILT_SENSOR = 59,
  TECHNIC_MEDIUM_HUB_TEMPERATURE_SENSOR = 60,
  TECHNIC_COLOR_SENSOR = 61,              // Spike Prime
  TECHNIC_DISTANCE_SENSOR = 62,           // Spike Prime
  TECHNIC_FORCE_SENSOR = 63,              // Spike Prime
  MARIO_HUB_GESTURE_SENSOR = 71,                 // https://github.com/bricklife/LEGO-Mario-Reveng
  MARIO_HUB_BARCODE_SENSOR = 73,          // https://github.com/bricklife/LEGO-Mario-Reveng
  MARIO_HUB_PANT_SENSOR = 74,             // https://github.com/bricklife/LEGO-Mario-Reveng
  TECHNIC_MEDIUM_ANGULAR_MOTOR_GREY = 75, // Mindstorms
  TECHNIC_LARGE_ANGULAR_MOTOR_GREY = 76   // Mindstorms
} e_device_type_t;

typedef enum
{
  DETACHED = 0x00,
  ATTACHED = 0x01,
  ATTACHED_VIRTUAL = 0x02,
} e_io_event_t;


typedef struct {
   uint16_t lenght;
   uint8_t hub_id;
   e_msg_type_t type;
} s_common_header_t;

// typedef struct {
//    s_common_header_t header;
//    uint8_t p_msg_data[LWP_MSG_DATA_SIZE_MAX];
//    uint16_t msg_size;
// } s_lwp_msg_t;

#endif // LWP_TYPES_H
